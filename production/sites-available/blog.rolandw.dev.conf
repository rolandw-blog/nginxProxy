server {
    listen 80;
    listen 443 ssl http2;

    # Import key files
    include /etc/nginx/config/keys.conf;

    # we are going to share files from here
    root /usr/share/nginx/html;

    # We are only looking for index.html
    index index.html;

    # define the server name so nginx knows to route requests for this domain here
    server_name blog.rolandw.dev;

    # Use dockers DNS resolver with a cache of 30s
    resolver 127.0.0.11 valid=30s;

    # auth route
# normal requests go to the blog
    location / {
        root /usr/share/nginx/html/dist;
        index index.html;
    }

    # auth route
    location /auth {
        internal;
        return 200 'gangnam style!';
        # proxy_pass http://authentication:8080;
        # proxy_pass_request_body off;
        # proxy_set_header Content-Length "";
    }

    location /sockjs-node {
        # This is a web socket connection so we need these following headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;

        set $upstream http://management:4000;
        proxy_pass $upstream;
    }

    location /admin {
        auth_request /auth;
        set $upstream http://management:4000;
        proxy_pass $upstream;
    }

    # This root location for blogwatcher drops the trailing slash
    # location /api/v1/watch/ {
    #     # auth_request /auth;
    #     proxy_pass http://blogwatcher:3001/;
    # }
    # location ^~ /api/v1/watch/ {
    #     proxy_pass http://blogwatcher:3001/;
    # }
    location /api/v1/watch {
        return 301 /api/v1/watch/;
    }
    location /api/v1/watch/ {
        auth_request /auth;
        proxy_pass http://blogwatcher:3001/;
    }

    location /api/v1/build/ {
        auth_request /auth;
        proxy_pass http://blogbuilder:3001/;
    }


    # All other blogwatcher locations also drop the trailing slash
    # location /api/v1/build/ {
    #     auth_request /auth;
    #     # rewrite every url to drop the trailing slash
    #     rewrite ^/(.*)/$ /$1 permanent;
    #     proxy_pass http://blogwatcher:3001/;
    # }

    # 401 requests will go to @error401 below
    error_page 401 = @error401;

    # If the user is not logged in, redirect them to login URL
    # By using auth_request subrequests we can force the client to take a trip to /auth (which goes to auth.domain.com) to check their session cookie
    #   If they dont have a cookie, then they need to log in and get one for the whole *.domain.com
    #   If they have an invalid cookie they come back 401 and loop around to auth.domain.com again
    #   If they have a good cookie then they will come back 200 and proceed to the restricted resource
    location @error401 {
        return 302 https://login.rolandw.dev/promptlogin?serviceURL=http://$http_host$request_uri;
    }
}
